# prints a string of letters in reverse order. 

word = input("Word: ")
def backward(n):
    set = ""
    for i in range(len(str(n))):
        set = set + n[len(n)-i-1]
    return set
print(word + " spelled backwards is " + backward(word)+ ".")



# prints every second letter of a word in reverse order.

word = input("Another word: ")
def second_rev(k):
    set = ""
    for i in range(len(str(k))):
        set = set + k[len(k)-i-1]
    modified = ""
    for i in range(int(len(str(set))/2)):
        if len(str(set)) % 2 ==0:
            modified += set[2*i]
        else:
            modified += set[2*i+1]
    return modified
print(second_rev(word))
    


# splits a string by commas 
user = input("Any word: ") 
comma = "" 
for i in range(len(str(user))):
    comma = comma + user[i] + ","
print(comma)    



# writes a string vertically 
user = input("Splitting a string by lines. Word: ")
lines = ""
for i in range(len(str(user))):
    lines = lines + user[i] + "\n"
print(lines)



# splits a string by two spaces 
person = input("Word: ")
two_space = ""
for i in range(len(str(person))):
    two_space = two_space + person[i] + "  "
print(two_space)



# adds every odd term in a Fibonacci sequence up to (and including) n, where n=6000000.

seq = []
odd =[]
n = 6000000
def fib(n):
    a=1
    b=2
    while a <= n:
        seq.append(a)
        a,b=b,a+b
    for k in range(int(len(seq)/2)):
        odd.append(seq[2*k])
    return odd
print(sum(fib(n)))
 


# adds every third term in a Fibonacci sequence up to (and including) n, where n=60000000.

seq = []
odd = []
n = 60000000
def fib(n):
    a=1
    b=2
    while a<=n:
        seq.append(a)
        a,b=b,a+b
    for k in range(int(len(seq)/3)):
        odd.append(seq[3*k+2])
    return odd
print(sum(fib(n)))



# pig latin
user= input("Word: ")
def pig_latin(n):
    new_word = ""
    new_word = n + n[0] + "ay"
    new_word = new_word[1:len(new_word)]
    return new_word
print(pig_latin(user))



